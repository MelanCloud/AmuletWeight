Scan := Gui("+AlwaysOnTop +LastFound -Caption", "AutoHotkeySnapshotApp"),
Scan.BackColor := "FFFFFF",

Star := Gui(),
tabStar := Star.Add("Tab3", "x0 y0 w350 h270 -wrap", ["Required", "Varying", "Passives"]),
tabStar.UseTab("Required"),
Star.SetFont("Underline"), Star.Add("Text", "x15 y25", "Required buffs."), Star.SetFont(),
Star.Add("Text", "y+9", "Capacity:"),
Amulets["Star"]["Values"]["xCAP"] := Star.Add("Edit", "x140 y44 w55", 1.25),
tabStar.UseTab("Varying"),
Star.SetFont("Underline"), Star.Add("Text", "x15 y25", "Varying buffs: Select two to five."), Star.SetFont(),
Amulets["Star"]["Checks"].Set(
    "P",Star.Add("CheckBox", "y+9", "Pollen:"),
    "WHITE_P",Star.Add("CheckBox", "y+12", "White Pollen:"),
    "RED_P",Star.Add("CheckBox", "y+12", "Red Pollen:"),
    "BLUE_P",Star.Add("CheckBox", "y+12", "Blue Pollen:"),
    "BEE_P",Star.Add("CheckBox", "y+12", "Bee Pollen:"),
    "CONV_IST",Star.Add("CheckBox", "y+12", "Instant Conversion:"),
    "xCONV_RTE",Star.Add("CheckBox", "y+12", "Convert Rate:"),
    "TOKEN_RTE",Star.Add("CheckBox", "y+12", "Ability Rate:"),
    "CRIT_CH",Star.Add("CheckBox", "y+12", "Critical Chance:")
),
Star.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Star"]["Values"]["P"] := Star.Add("UpDown", "Range5-20"),
Star.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Star"]["Values"]["WHITE_P"] := Star.Add("UpDown", "Range15-70"),
Star.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["Star"]["Values"]["RED_P"] := Star.Add("UpDown", "Range15-70"),
Star.Add("Edit", "x140 y119 w55 +ReadOnly"), Amulets["Star"]["Values"]["BLUE_P"] := Star.Add("UpDown", "Range15-70"),
Star.Add("Edit", "x140 y144 w55 +ReadOnly"), Amulets["Star"]["Values"]["BEE_P"] := Star.Add("UpDown", "Range15-70"),
Star.Add("Edit", "x140 y169 w55 +ReadOnly"), Amulets["Star"]["Values"]["CONV_IST"] := Star.Add("UpDown", "Range3-12"),
Start := 1.05,
Increment := 0.01,
Amulets["Star"]["Values"]["xCONV_RTE"] := Star.add("Edit", "x140 y194 w38 +ReadOnly", Start),
updownStar_xCONV_RTE := Star.add("UpDown", "-16 hp x+0 Range0-20"),
updownStar_xCONV_RTE.OnEvent("Change", ((e, n0, stepping, this, value) => e.value := Round(value * stepping + n0, 2)).Bind(Amulets["Star"]["Values"]["xCONV_RTE"], Start, Increment)),
Star.Add("Edit", "x140 y219 w55 +ReadOnly"), Amulets["Star"]["Values"]["TOKEN_RTE"] := Star.Add("UpDown", "Range1-7"),
Star.Add("Edit", "x140 y244 w55 +ReadOnly"), Amulets["Star"]["Values"]["CRIT_CH"] := Star.Add("UpDown", "Range1-7"),
tabStar.UseTab("Passives"),
Star.SetFont("Underline"), Star.Add("Text", "x15 y25", "Passives: Select up to two."), Star.SetFont(),
Amulets["Star"]["Checks"].Set(
    "Pop Star",Star.Add("CheckBox", "y+9", "Pop Star"),
    "Guiding Star",Star.Add("CheckBox", "y+12", "Guiding Star"),
    "Star Shower",Star.Add("CheckBox", "y+12", "Star Shower"),
    "Gummy Star",Star.Add("CheckBox", "y+12", "Gummy Star"),
    "Scorching Star",Star.Add("CheckBox", "y+12", "Scorching Star"),
    "Star Saw",Star.Add("CheckBox", "y+12", "Star Saw")
),

Moon := Gui(),
tabMoon := Moon.Add("Tab3", "x0 y0 w350 h270 -wrap", ["Required", "Varying 1", "Varying 2", "Possible"]),
tabMoon.UseTab("Required"),
Moon.SetFont("Underline"), Moon.Add("Text", "x15 y25", "Required buffs."), Moon.SetFont(),
Moon.Add("Text", "y+9", "Capacity:"),
Increment := 25000,
Start := 25000,
Amulets["Moon"]["Values"]["CAP"] := Moon.add("Edit", "x140 y44 w55 +ReadOnly", Start),
updownMoon_CAP := Moon.add("UpDown", "-16 hp x+0 Range0-9"),
updownMoon_CAP.OnEvent("Change", ((e, n0, stepping, this, value) => e.value := value * stepping + n0).Bind(Amulets["Moon"]["Values"]["CAP"], Start, Increment)),
tabMoon.UseTab("Varying 1"),
Moon.SetFont("Underline"), Moon.Add("Text", "x15 y25", "Varying buff."), Moon.SetFont(),
Amulets["Moon"]["Checks"].Set(
    "WHITE_P",Moon.Add("Radio", "y+9", "White Pollen:"),
    "BOND_T",Moon.Add("Radio", "y+12", "Treat Bond:")
),
Moon.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Moon"]["Values"]["WHITE_P"] := Moon.Add("UpDown", "Range20-50"),
Moon.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Moon"]["Values"]["BOND_T"] := Moon.Add("UpDown", "Range3-10"),
tabMoon.UseTab("Varying 2"),
Moon.SetFont("Underline"), Moon.Add("Text", "x15 y25", "Varying buff."), Moon.SetFont(),
Amulets["Moon"]["Checks"].Set(
    "CONV_IST",Moon.Add("Radio", "y+9", "Instant Conversion:"),
    "HONEY_P",Moon.Add("Radio", "y+12", "Honey Per Pollen:"),
    "P",Moon.Add("Radio", "y+12", "Pollen:"),
    "BEE_P",Moon.Add("Radio", "y+12", "Bee Pollen:"),
    "TOOL_P",Moon.Add("Radio", "y+12", "Tool Pollen:"),
    "F1",Moon.Add("Radio", "y+12", "Pineapple Patch:"),
    "BOND_B",Moon.Add("Radio", "y+12", "Battle Bond:")
),
Moon.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Moon"]["Values"]["CONV_IST"] := Moon.Add("UpDown", "Range1-5"),
Moon.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Moon"]["Values"]["HONEY_P"] := Moon.Add("UpDown", "Range2-8"),
Moon.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["Moon"]["Values"]["P"] := Moon.Add("UpDown", "Range1-5"),
Moon.Add("Edit", "x140 y119 w55 +ReadOnly"), Amulets["Moon"]["Values"]["BEE_P"] := Moon.Add("UpDown", "Range10-25"),
Moon.Add("Edit", "x140 y144 w55 +ReadOnly"), Amulets["Moon"]["Values"]["TOOL_P"] := Moon.Add("UpDown", "Range10-20"),
Moon.Add("Edit", "x140 y169 w55 +ReadOnly"), Amulets["Moon"]["Values"]["F1_Value"] := Moon.Add("UpDown", "Range50-150"),
Amulets["Moon"]["Values"]["F1"] := Moon.Add("DropDownList", "x+5 Choose1", ["Pineapple"]),
Moon.Add("Edit", "x140 y194 w55 +ReadOnly"), Amulets["Moon"]["Values"]["BOND_B"] := Moon.Add("UpDown", "Range5-12"),
tabMoon.UseTab("Possible"),
Moon.SetFont("Underline"), Moon.Add("Text", "x15 y25", "Possible buffs."), Moon.SetFont(),
Amulets["Moon"]["Checks"].Set(
    "TICKET_CH",Moon.Add("CheckBox", "y+9", "Ticket Chance:"),
    "MOVE_C",Moon.Add("CheckBox", "y+12", "Movement Collection:")
),
Moon.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Moon"]["Values"]["TICKET_CH"] := Moon.Add("UpDown", "Range1-5"),
Moon.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Moon"]["Values"]["MOVE_C"] := Moon.Add("UpDown", "Range1-3"),

KingBeetle := Gui(),
tabKingBeetle := KingBeetle.Add("Tab3", "x0 y0 w350 h270 -wrap", ["Required", "Possible"]),
tabKingBeetle.UseTab("Required"),
KingBeetle.SetFont("Underline"), KingBeetle.Add("Text", "x15 y25", "Required buffs."), KingBeetle.SetFont(),
KingBeetle.Add("Text", "y+9", "Convert Rate:"),
KingBeetle.Add("Text", "y+12", "Field Buff:"),
KingBeetle.Add("Text", "y+12", "Field Buff:"),
KingBeetle.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["KingBeetle"]["Values"]["CONV_RTE"] := KingBeetle.Add("UpDown", "Range1-100"),
KingBeetle.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["KingBeetle"]["Values"]["F1_Value"] := KingBeetle.Add("UpDown", "Range1-100"),
Amulets["KingBeetle"]["Values"]["F1"] := KingBeetle.Add("DropDownList", "x+5 w90", ["Bamboo", "Mushroom", "Blue Flower", "Clover", "Strawberry"]),
KingBeetle.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["KingBeetle"]["Values"]["F2_Value"] := KingBeetle.Add("UpDown", "Range1-100"),
Amulets["KingBeetle"]["Values"]["F2"] := KingBeetle.Add("DropDownList", "x+5 w90", ["Bamboo", "Mushroom", "Blue Flower", "Clover", "Strawberry"]),
tabKingBeetle.UseTab("Possible"),
KingBeetle.SetFont("Underline"), KingBeetle.Add("Text", "x15 y25", "Possible buffs."), KingBeetle.SetFont(),
KingBeetle.Add("Radio", "y+9", "N/A"),
Amulets["KingBeetle"]["Checks"].Set(
    "ATK",KingBeetle.Add("Radio", "y+12", "Bee Attack:"),
    "ATK_RED",KingBeetle.Add("Radio", "y+12", "Red Attack:"),
    "ATK_BLUE",KingBeetle.Add("Radio", "y+12", "Blue Attack:")
),
KingBeetle.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["KingBeetle"]["Values"]["ATK"] := KingBeetle.Add("UpDown", "Range1-1"),
KingBeetle.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["KingBeetle"]["Values"]["ATK_RED"] := KingBeetle.Add("UpDown", "Range1-1"),
KingBeetle.Add("Edit", "x140 y119 w55 +ReadOnly"), Amulets["KingBeetle"]["Values"]["ATK_BLUE"] := KingBeetle.Add("UpDown", "Range1-1"),

Ant := Gui(),
tabAnt := Ant.Add("Tab3", "x0 y0 w350 h270 -wrap", ["Required", "Possible"]),
tabAnt.UseTab("Required"),
Ant.SetFont("Underline"), Ant.Add("Text", "x15 y25", "Required buffs."), Ant.SetFont(),
Ant.Add("Text", "y+9", "Convert Rate:"),
Ant.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Ant"]["Values"]["CONV_RTE"] := Ant.Add("UpDown", "Range1-110"),
tabAnt.UseTab("Possible"),
Ant.SetFont("Underline"), Ant.Add("Text", "x15 y25", "Possible buffs."), Ant.SetFont(),
Amulets["Ant"]["Checks"].Set(
    "CRIT_CH",Ant.Add("CheckBox", "y+9", "Critical Chance:"),
    "CRIT_PW",Ant.Add("CheckBox", "y+12", "Critical Power:"),
    "ATK",Ant.Add("CheckBox", "y+12", "Bee Attack:"),
    "MOVE_S",Ant.Add("CheckBox", "y+12", "Movement Speed:"),
    "P",Ant.Add("CheckBox", "y+12", "Pollen:"),
    "RED_P",Ant.Add("CheckBox", "y+12", "Red Pollen:"),
    "BLUE_P",Ant.Add("CheckBox", "y+12", "Blue Pollen:"),
    "WHITE_P",Ant.Add("CheckBox", "y+12", "White Pollen:")
),
Ant.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Ant"]["Values"]["CRIT_CH"] := Ant.Add("UpDown", "Range1-3"),
Ant.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Ant"]["Values"]["CRIT_PW"] := Ant.Add("UpDown", "Range1-50"),
Ant.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["Ant"]["Values"]["ATK"] := Ant.Add("UpDown", "Range1-1"),
Ant.Add("Edit", "x140 y119 w55 +ReadOnly"), Amulets["Ant"]["Values"]["MOVE_S"] := Ant.Add("UpDown", "Range1-3"),
Ant.Add("Edit", "x140 y144 w55 +ReadOnly"), Amulets["Ant"]["Values"]["P"] := Ant.Add("UpDown", "Range1-5"),
Ant.Add("Edit", "x140 y169 w55 +ReadOnly"), Amulets["Ant"]["Values"]["RED_P"] := Ant.Add("UpDown", "Range1-30"),
Ant.Add("Edit", "x140 y194 w55 +ReadOnly"), Amulets["Ant"]["Values"]["BLUE_P"] := Ant.Add("UpDown", "Range1-30"),
Ant.Add("Edit", "x140 y219 w55 +ReadOnly"), Amulets["Ant"]["Values"]["WHITE_P"] := Ant.Add("UpDown", "Range1-30"),

Shell := Gui(),
tabShell := Shell.Add("Tab3", "x0 y0 w350 h270 -wrap", ["Required", "Varying 1", "Varying 2"]),
tabShell.UseTab("Required"),
Shell.SetFont("Underline"), Shell.Add("Text", "x15 y25", "Required buffs."), Shell.SetFont(),
Shell.Add("Text", "y+9", "Goo:"),
Shell.Add("Text", "y+9", "Stump Field:"),
Shell.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Shell"]["Values"]["GOO"] := Shell.Add("UpDown", "Range1-15"),
Shell.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Shell"]["Values"]["F1_Value"] := Shell.Add("UpDown", "Range10-65"),
Amulets["Shell"]["Values"]["F1"] := Shell.Add("DropDownList", "x+5 w90 Choose1", ["Stump"]),
tabShell.UseTab("Varying 1"),
Shell.SetFont("Underline"), Shell.Add("Text", "x15 y25", "Varying buffs: Select one to two."), Shell.SetFont(),
Amulets["Shell"]["Checks"].Set(
    "CONV_AMT",Shell.Add("CheckBox", "y+9", "Convert Amount:"),
    "CONV_GOO",Shell.Add("CheckBox", "y+12", "Goo Conversion:"),
    "TOKEN_H",Shell.Add("CheckBox", "y+12", "Honey From Tokens:"),
    "P",Shell.Add("CheckBox", "y+12", "Pollen:"),
    "WHITE_P",Shell.Add("CheckBox", "y+12", "White Pollen:"),
    "TOOL_P",Shell.Add("CheckBox", "y+12", "Tool Pollen:"),
    "BOND_B",Shell.Add("CheckBox", "y+12", "Battle Bond:"),
    "DEF",Shell.Add("CheckBox", "y+12", "Defense:")
),
Shell.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Shell"]["Values"]["CONV_AMT"] := Shell.Add("UpDown", "Range2-25"),
Shell.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Shell"]["Values"]["CONV_GOO"] := Shell.Add("UpDown", "Range2-10"),
Shell.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["Shell"]["Values"]["TOKEN_H"] := Shell.Add("UpDown", "Range10-50"),
Shell.Add("Edit", "x140 y119 w55 +ReadOnly"), Amulets["Shell"]["Values"]["P"] := Shell.Add("UpDown", "Range1-5"),
Shell.Add("Edit", "x140 y144 w55 +ReadOnly"), Amulets["Shell"]["Values"]["WHITE_P"] := Shell.Add("UpDown", "Range8-40"),
Shell.Add("Edit", "x140 y169 w55 +ReadOnly"), Amulets["Shell"]["Values"]["TOOL_P"] := Shell.Add("UpDown", "Range1-20"),
Shell.Add("Edit", "x140 y194 w55 +ReadOnly"), Amulets["Shell"]["Values"]["BOND_B"] := Shell.Add("UpDown", "Range1-20"),
Shell.Add("Edit", "x140 y219 w55 +ReadOnly"), Amulets["Shell"]["Values"]["DEF"] := Shell.Add("UpDown", "Range2-5"),
tabShell.UseTab("Varying 2"),
Shell.SetFont("Underline"), Shell.Add("Text", "x15 y25", "Varying buffs: Select one to three."), Shell.SetFont(),
Amulets["Shell"]["Checks"].Set(
    "F2",Shell.Add("CheckBox", "y+9", "Field Buff:"),
    "F3",Shell.Add("CheckBox", "y+12", "Field Buff:"),
    "F4",Shell.Add("CheckBox", "y+12", "Field Buff:")
),
Shell.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Shell"]["Values"]["F2_Value"] := Shell.Add("UpDown", "Range5-30"),
Amulets["Shell"]["Values"]["F2"] := Shell.Add("DropDownList", "x+5 w90", ["Cactus", "Clover", "Dandelion", "Spider", "Sunflower", "Pumpkin", "Pineapple"]),
Shell.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Shell"]["Values"]["F3_Value"] := Shell.Add("UpDown", "Range5-30"),
Amulets["Shell"]["Values"]["F3"] := Shell.Add("DropDownList", "x+5 w90", ["Cactus", "Clover", "Dandelion", "Spider", "Sunflower", "Pumpkin", "Pineapple"]),
Shell.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["Shell"]["Values"]["F4_Value"] := Shell.Add("UpDown", "Range5-30"),
Amulets["Shell"]["Values"]["F4"] := Shell.Add("DropDownList", "x+5 w90", ["Cactus", "Clover", "Dandelion", "Spider", "Sunflower", "Pumpkin", "Pineapple"]),

StickBug := Gui(),
tabStickBug := StickBug.Add("Tab3", "x0 y0 w350 h270 -wrap", ["Required", "Varying 1", "Varying 2", "Varying 3", "Possible 1", "Possible 2"]),
tabStickBug.UseTab("Required"),
StickBug.SetFont("Underline"), StickBug.Add("Text", "x15 y25", "Required buffs."), StickBug.SetFont(),
StickBug.Add("Text", "y+9", "Capacity:"),
StickBug.Add("Text", "y+12", "Convert Rate:"),
Increment := 25000,
Start := 25000,
Amulets["StickBug"]["Values"]["CAP"] := StickBug.add("Edit", "x140 y44 w55 +ReadOnly", Start),
updownStickBug_CAP := StickBug.add("UpDown", "-16 hp x+0 Range0-11"),
updownStickBug_CAP.OnEvent("Change", ((e, n0, stepping, this, value) => e.value := value * stepping + n0).Bind(Amulets["StickBug"]["Values"]["CAP"], Start, Increment)),
Start := 1.01,
Increment := 0.01,
Amulets["StickBug"]["Values"]["xCONV_RTE"] := StickBug.add("Edit", "x140 y69 w55 vxCONV_RTE +ReadOnly", Start),
updownStickBug_xCONV_RTE := StickBug.add("UpDown", "-16 hp x+0 Range0-24"),
updownStickBug_xCONV_RTE.OnEvent("Change", ((e, n0, stepping, this, value) => e.value := Round(value * stepping + n0, 2)).Bind(Amulets["StickBug"]["Values"]["xCONV_RTE"], Start, Increment)),
tabStickBug.UseTab("Varying 1"),
StickBug.SetFont("Underline"), StickBug.Add("Text", "x15 y25", "Varying buff."), StickBug.SetFont(),
Amulets["StickBug"]["Checks"].Set(
    "ATK_RED",StickBug.Add("Radio", "y+9", "Red Bee Attack:"),
    "ATK_BLUE",StickBug.Add("Radio", "y+12", "Blue Bee Attack:")
),
StickBug.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["ATK_RED"] := StickBug.Add("UpDown", "Range1-2"),
StickBug.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["ATK_BLUE"] := StickBug.Add("UpDown", "Range1-2"),
tabStickBug.UseTab("Varying 2"),
StickBug.SetFont("Underline"), StickBug.Add("Text", "x15 y25", "Varying buff."), StickBug.SetFont(),
Amulets["StickBug"]["Checks"].Set(
    "P",StickBug.Add("Radio", "y+9", "Pollen:"),
    "WHITE_P",StickBug.Add("Radio", "y+12", "White Pollen:"),
    "RED_P",StickBug.Add("Radio", "y+12", "Red Pollen:"),
    "BLUE_P",StickBug.Add("Radio", "y+12", "Blue Pollen:")
),
StickBug.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["P"] := StickBug.Add("UpDown", "Range1-10"),
StickBug.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["WHITE_P"] := StickBug.Add("UpDown", "Range1-30"),
StickBug.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["RED_P"] := StickBug.Add("UpDown", "Range1-30"),
StickBug.Add("Edit", "x140 y119 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["BLUE_P"] := StickBug.Add("UpDown", "Range1-30"),
tabStickBug.UseTab("Varying 3"),
StickBug.SetFont("Underline"), StickBug.Add("Text", "x15 y25", "Varying buff."), StickBug.SetFont(),
Amulets["StickBug"]["Checks"].Set(
    "ATK_PW",StickBug.Add("Radio", "y+9", "Bee Attack Power:"),
    "P_BOMB",StickBug.Add("Radio", "y+12", "Bomb Pollen:"),
    "P_BOMB_RED",StickBug.Add("Radio", "y+12", "Red Bomb Pollen:"),
    "P_BOMB_BLUE",StickBug.Add("Radio", "y+12", "Blue Bomb Pollen:"),
    "P_BOMB_BUZZ",StickBug.Add("Radio", "y+12", "Buzz Bomb Pollen:"),
    "TOKEN_H",StickBug.Add("Radio", "y+12", "Token Honey:")
),
StickBug.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["ATK_PW"] := StickBug.Add("UpDown", "Range3-10"),
StickBug.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["P_BOMB"] := StickBug.Add("UpDown", "Range5-15"),
StickBug.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["P_BOMB_RED"] := StickBug.Add("UpDown", "Range10-30"),
StickBug.Add("Edit", "x140 y119 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["P_BOMB_BLUE"] := StickBug.Add("UpDown", "Range10-30"),
StickBug.Add("Edit", "x140 y144 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["P_BOMB_BUZZ"] := StickBug.Add("UpDown", "Range10-30"),
StickBug.Add("Edit", "x140 y169 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["TOKEN_H"] := StickBug.Add("UpDown", "Range20-100"),
tabStickBug.UseTab("Possible 1"),
StickBug.SetFont("Underline"), StickBug.Add("Text", "x15 y25", "Possible buff."), StickBug.SetFont(),
StickBug.Add("Radio", "y+9", "N/A"),
Amulets["StickBug"]["Checks"].Set(
    "RESPAWN",StickBug.Add("Radio", "y+12", "Monster Respawn:"),
    "BOND_B",StickBug.Add("Radio", "y+12", "Battle Bond:"),
    "ATK",StickBug.Add("Radio", "y+12", "Bee Attack:")
),
StickBug.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["RESPAWN"] := StickBug.Add("UpDown", "Range5-10"),
StickBug.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["BOND_B"] := StickBug.Add("UpDown", "Range8-15"),
StickBug.Add("Edit", "x140 y119 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["ATK"] := StickBug.Add("UpDown", "Range1-1"),
tabStickBug.UseTab("Possible 2"),
StickBug.SetFont("Underline"), StickBug.Add("Text", "x15 y25", "Possible buff."), StickBug.SetFont(),
Amulets["StickBug"]["Checks"]["TOOL_P"] := StickBug.Add("CheckBox", "y+9", "Tool Pollen:"),
StickBug.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["StickBug"]["Values"]["TOOL_P"] := StickBug.Add("UpDown", "Range1-20"),

Cog := Gui(),
tabCog := Cog.Add("Tab3", "x0 y0 w350 h270 -wrap", ["Required", "Varying 1", "Varying 2", "Varying 3", "Possible 1", "Possible 2"]),
tabCog.UseTab("Required"),
Cog.SetFont("Underline"), Cog.Add("Text", "x15 y25", "Required buff."), Cog.SetFont(),
Cog.Add("Text", "y+9", "Capacity:"),
Increment := 500,
Start := 22500,
Amulets["Cog"]["Values"]["CAP"] := Cog.add("Edit", "x140 y44 w55 +ReadOnly", Start),
updownCog_CAP := Cog.add("UpDown", "-16 hp x+0 Range44-455"),
updownCog_CAP.OnEvent("Change", ((e, n0, stepping, this, value) => e.value := value * stepping + n0).Bind(Amulets["Cog"]["Values"]["CAP"], Start, Increment)),
tabCog.UseTab("Varying 1"),
Cog.SetFont("Underline"), Cog.Add("Text", "x15 y25", "Varying buff."), Cog.SetFont(),
Amulets["Cog"]["Checks"].Set(
    "ATK_PW",Cog.Add("Radio", "y+9", "Bee Attack Power:"),
    "ATK_RED",Cog.Add("Radio", "y+12", "Red Bee Attack:"),
    "ATK_BLUE",Cog.Add("Radio", "y+12", "Blue Bee Attack:"),
    "ATK_COLORLESS",Cog.Add("Radio", "y+12", "Colorless Bee Attack:")
),
Cog.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Cog"]["Values"]["ATK_PW"] := Cog.Add("UpDown", "Range3-15"),
Cog.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Cog"]["Values"]["ATK_RED"] := Cog.Add("UpDown", "Range1-2"),
Cog.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["Cog"]["Values"]["ATK_BLUE"] := Cog.Add("UpDown", "Range1-2"),
Cog.Add("Edit", "x140 y119 w55 +ReadOnly"), Amulets["Cog"]["Values"]["ATK_COLORLESS"] := Cog.Add("UpDown", "Range1-2"),
tabCog.UseTab("Varying 2"),
Cog.SetFont("Underline"), Cog.Add("Text", "x15 y25", "Varying buff."), Cog.SetFont(),
Amulets["Cog"]["Checks"].Set(
    "P",Cog.Add("Radio", "y+9", "Pollen:"),
    "WHITE_P",Cog.Add("Radio", "y+12", "White Pollen:"),
    "RED_P",Cog.Add("Radio", "y+12", "Red Pollen:"),
    "BLUE_P",Cog.Add("Radio", "y+12", "Blue Pollen:")
),
Cog.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Cog"]["Values"]["P"] := Cog.Add("UpDown", "Range1-10"),
Cog.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Cog"]["Values"]["WHITE_P"] := Cog.Add("UpDown", "Range3-30"),
Cog.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["Cog"]["Values"]["RED_P"] := Cog.Add("UpDown", "Range3-30"),
Cog.Add("Edit", "x140 y119 w55 +ReadOnly"), Amulets["Cog"]["Values"]["BLUE_P"] := Cog.Add("UpDown", "Range3-30"),
tabCog.UseTab("Varying 3"),
Cog.SetFont("Underline"), Cog.Add("Text", "x15 y25", "Varying buff."), Cog.SetFont(),
Amulets["Cog"]["Checks"].Set(
    "CONV_IST_WHITE",Cog.Add("Radio", "y+9", "Instant White Convert:"),
    "CONV_IST_RED",Cog.Add("Radio", "y+12", "Instant Red Convert:"),
    "CONV_IST_BLUE",Cog.Add("Radio", "y+12", "Instant Blue Convert:")
),
Cog.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Cog"]["Values"]["CONV_IST_WHITE"] := Cog.Add("UpDown", "Range1-5"),
Cog.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Cog"]["Values"]["CONV_IST_RED"] := Cog.Add("UpDown", "Range1-5"),
Cog.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["Cog"]["Values"]["CONV_IST_BLUE"] := Cog.Add("UpDown", "Range1-5"),
tabCog.UseTab("Possible 1"),
Cog.SetFont("Underline"), Cog.Add("Text", "x15 y25", "Possible buffs."), Cog.SetFont(),
Amulets["Cog"]["Checks"].Set(
    "ABILITY_EVENT",Cog.Add("CheckBox", "y+9", "Event Ability Pollen:"),
    "ABILITY_MARK",Cog.Add("CheckBox", "y+12", "Mark Ability Pollen:"),
    "FLAME_P",Cog.Add("CheckBox", "y+12", "Flame Ability Pollen:"),
    "BUBBLE_P",Cog.Add("CheckBox", "y+12", "Bubble Ability Pollen:"),
    "BEE_P",Cog.Add("CheckBox", "y+12", "Bee Pollen:")
),
Cog.Add("Edit", "x140 y44 w55 +ReadOnly"), Amulets["Cog"]["Values"]["ABILITY_EVENT"] := Cog.Add("UpDown", "Range5-15"),
Cog.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Cog"]["Values"]["ABILITY_MARK"] := Cog.Add("UpDown", "Range5-20"),
Cog.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["Cog"]["Values"]["FLAME_P"] := Cog.Add("UpDown", "Range1-20"),
Cog.Add("Edit", "x140 y119 w55 +ReadOnly"), Amulets["Cog"]["Values"]["BUBBLE_P"] := Cog.Add("UpDown", "Range1-20"),
Cog.Add("Edit", "x140 y144 w55 +ReadOnly"), Amulets["Cog"]["Values"]["BEE_P"] := Cog.Add("UpDown", "Range6-12"),
tabCog.UseTab("Possible 2"),
Cog.SetFont("Underline"), Cog.Add("Text", "x15 y25", "Possible buffs."), Cog.SetFont(),
Cog.Add("Radio", "y+9", "N/A"),
Amulets["Cog"]["Checks"].Set(
    "TOKEN_LFS",Cog.Add("Radio", "y+12", "Token Lifespan:"),
    "TOKEN_H",Cog.Add("Radio", "y+12", "Token Honey:"),
    "CRIT_PW_S",Cog.Add("Radio", "y+12", "Super-Crit Power:"),
    "NECTAR",Cog.Add("Radio", "y+12", "Nectar:")
),
Cog.Add("Edit", "x140 y69 w55 +ReadOnly"), Amulets["Cog"]["Values"]["TOKEN_LFS"] := Cog.Add("UpDown", "Range1-10"),
Cog.Add("Edit", "x140 y94 w55 +ReadOnly"), Amulets["Cog"]["Values"]["TOKEN_H"] := Cog.Add("UpDown", "Range26-70"),
Cog.Add("Edit", "x140 y119 w55 +ReadOnly"), Amulets["Cog"]["Values"]["CRIT_PW_S"] := Cog.Add("UpDown", "Range10-25"),
Cog.Add("Edit", "x140 y144 w55 +ReadOnly"), Amulets["Cog"]["Values"]["NECTAR"] := Cog.Add("UpDown", "Range1-5")

buffGUI(*) {
    for Amulet in Amulets {
        if Amulet == "Weights"
            continue
        if (Amulet !== selectedAmulet.Text)
            %Amulet%.Hide()
    }
    %selectedAmulet.Text%.Title := "Buff Selection - " . selectedAmulet.Text,
    %selectedAmulet.Text%.Show("xCenter yCenter w350 h270")
}